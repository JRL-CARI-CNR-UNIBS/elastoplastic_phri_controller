<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from system.urdf.xacro              | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="azrael">
  <material name="black">
    <color rgba="0. 0. 0. 1"/>
  </material>
  <material name="dark_grey">
    <color rgba="0.1 0.1 0.1 1"/>
  </material>
  <material name="grey">
    <color rgba="0.6 0.6 0.6 1"/>
  </material>
  <material name="white">
    <color rgba="0.9 0.9 0.9 1"/>
  </material>
  <!--
    NOTE the macro defined in this file is NOT part of the public API of this
          package. Users CANNOT rely on this file being available, or stored in
          this location. Nor can they rely on the existence of the macro.
  -->
  <!-- Base footprint is on the ground under the robot -->
  <link name="az_base_footprint">
    <inertial>
      <mass value="1000"/>
      <inertia ixx="0.001" ixy="0.01" ixz="0.01" iyy="0.001" iyz="0.01" izz="0.001"/>
    </inertial>
  </link>
  <!-- Base link is the center of the robot's bottom plate -->
  <link name="az_base_link_azrael">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0.032"/>
      <geometry>
        
      </geometry>
      <material name="Gray">
        <color rgba="0.5 0.5 0.5 1.0"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.032"/>
      <geometry>
        
      </geometry>
      <material name="Gray">
        <color rgba="0.5 0.5 0.5 1.0"/>
      </material>
    </collision>
    <inertial>
      <mass value="4000"/>
      <inertia ixx="1.48454" ixy="0.01" ixz="0.01" iyy="3.02861" iyz="0.01" izz="4.10178"/>
    </inertial>
  </link>
  <joint name="az_base_footprint_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="az_base_footprint"/>
    <child link="az_base_link_azrael"/>
  </joint>
  <link name="az_laser"/>
  <joint name="az_laser_joint" type="fixed">
    <origin rpy="0 0 1.570795" xyz="0.0 0.65 0.3"/>
    <parent link="az_base_link_azrael"/>
    <child link="az_laser"/>
  </joint>
  <!-- <link name="$(arg prefix)base_footprint"/> -->
  <ros2_control name="ur" type="system">
    <hardware>
      <plugin>mock_components/GenericSystem</plugin>
    </hardware>
    <joint name="az_shoulder_pan_joint">
      <command_interface name="position">
        <param name="min">{-2*pi}</param>
        <param name="max">{2*pi}</param>
      </command_interface>
      <command_interface name="velocity">
        <param name="min">-1.15</param>
        <param name="max">1.15</param>
      </command_interface>
      <state_interface name="position">
        <!-- initial position for the FakeSystem and simulation -->
        <param name="initial_value">0.0</param>
      </state_interface>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
    </joint>
    <joint name="az_shoulder_lift_joint">
      <command_interface name="position">
        <param name="min">{-0.5*pi}</param>
        <param name="max">{0.5*pi}</param>
      </command_interface>
      <command_interface name="velocity">
        <param name="min">-1.15</param>
        <param name="max">1.15</param>
      </command_interface>
      <state_interface name="position">
        <!-- initial position for the FakeSystem and simulation -->
        <param name="initial_value">-1.57</param>
      </state_interface>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
    </joint>
    <joint name="az_elbow_joint">
      <command_interface name="position">
        <param name="min">{-pi}</param>
        <param name="max">{pi}</param>
      </command_interface>
      <command_interface name="velocity">
        <param name="min">-1.15</param>
        <param name="max">1.15</param>
      </command_interface>
      <state_interface name="position">
        <!-- initial position for the FakeSystem and simulation -->
        <param name="initial_value">0.0</param>
      </state_interface>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
    </joint>
    <joint name="az_wrist_1_joint">
      <command_interface name="position">
        <param name="min">{-2*pi}</param>
        <param name="max">{2*pi}</param>
      </command_interface>
      <command_interface name="velocity">
        <param name="min">-1.2</param>
        <param name="max">1.2</param>
      </command_interface>
      <state_interface name="position">
        <!-- initial position for the FakeSystem and simulation -->
        <param name="initial_value">-1.57</param>
      </state_interface>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
    </joint>
    <joint name="az_wrist_2_joint">
      <command_interface name="position">
        <param name="min">{-2*pi}</param>
        <param name="max">{2*pi}</param>
      </command_interface>
      <command_interface name="velocity">
        <param name="min">-1.2</param>
        <param name="max">1.2</param>
      </command_interface>
      <state_interface name="position">
        <!-- initial position for the FakeSystem and simulation -->
        <param name="initial_value">0.0</param>
      </state_interface>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
    </joint>
    <joint name="az_wrist_3_joint">
      <command_interface name="position">
        <param name="min">{-2*pi}</param>
        <param name="max">{2*pi}</param>
      </command_interface>
      <command_interface name="velocity">
        <param name="min">-1.2</param>
        <param name="max">1.2</param>
      </command_interface>
      <state_interface name="position">
        <!-- initial position for the FakeSystem and simulation -->
        <param name="initial_value">0.0</param>
      </state_interface>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
    </joint>
    <sensor name="tcp_fts_sensor">
      <state_interface name="force.x"/>
      <state_interface name="force.y"/>
      <state_interface name="force.z"/>
      <state_interface name="torque.x"/>
      <state_interface name="torque.y"/>
      <state_interface name="torque.z"/>
    </sensor>
    <!-- NOTE The following are joints used only for testing with fake hardware and will change in the future -->
    <!-- <gpio name="speed_scaling">
          <state_interface name="speed_scaling_factor"/>
          <param name="initial_speed_scaling_factor">1</param>
          <command_interface name="target_speed_fraction_cmd"/>
          <command_interface name="target_speed_fraction_async_success"/>
        </gpio>

        <gpio name="gpio">
          <command_interface name="standard_digital_output_cmd_0"/>
          <command_interface name="standard_digital_output_cmd_1"/>
          <command_interface name="standard_digital_output_cmd_2"/>
          <command_interface name="standard_digital_output_cmd_3"/>
          <command_interface name="standard_digital_output_cmd_4"/>
          <command_interface name="standard_digital_output_cmd_5"/>
          <command_interface name="standard_digital_output_cmd_6"/>
          <command_interface name="standard_digital_output_cmd_7"/>
          <command_interface name="standard_digital_output_cmd_8"/>
          <command_interface name="standard_digital_output_cmd_9"/>
          <command_interface name="standard_digital_output_cmd_10"/>
          <command_interface name="standard_digital_output_cmd_11"/>
          <command_interface name="standard_digital_output_cmd_12"/>
          <command_interface name="standard_digital_output_cmd_13"/>
          <command_interface name="standard_digital_output_cmd_14"/>
          <command_interface name="standard_digital_output_cmd_15"/>
          <command_interface name="standard_digital_output_cmd_16"/>
          <command_interface name="standard_digital_output_cmd_17"/>

          <command_interface name="standard_analog_output_cmd_0"/>
          <command_interface name="standard_analog_output_cmd_1"/>

          <command_interface name="io_async_success"/>

          <state_interface name="digital_output_0"/>
          <state_interface name="digital_output_1"/>
          <state_interface name="digital_output_2"/>
          <state_interface name="digital_output_3"/>
          <state_interface name="digital_output_4"/>
          <state_interface name="digital_output_5"/>
          <state_interface name="digital_output_6"/>
          <state_interface name="digital_output_7"/>
          <state_interface name="digital_output_8"/>
          <state_interface name="digital_output_9"/>
          <state_interface name="digital_output_10"/>
          <state_interface name="digital_output_11"/>
          <state_interface name="digital_output_12"/>
          <state_interface name="digital_output_13"/>
          <state_interface name="digital_output_14"/>
          <state_interface name="digital_output_15"/>
          <state_interface name="digital_output_16"/>
          <state_interface name="digital_output_17"/>

          <state_interface name="digital_input_0"/>
          <state_interface name="digital_input_1"/>
          <state_interface name="digital_input_2"/>
          <state_interface name="digital_input_3"/>
          <state_interface name="digital_input_4"/>
          <state_interface name="digital_input_5"/>
          <state_interface name="digital_input_6"/>
          <state_interface name="digital_input_7"/>
          <state_interface name="digital_input_8"/>
          <state_interface name="digital_input_9"/>
          <state_interface name="digital_input_10"/>
          <state_interface name="digital_input_11"/>
          <state_interface name="digital_input_12"/>
          <state_interface name="digital_input_13"/>
          <state_interface name="digital_input_14"/>
          <state_interface name="digital_input_15"/>
          <state_interface name="digital_input_16"/>
          <state_interface name="digital_input_17"/>

          <state_interface name="standard_analog_output_0"/>
          <state_interface name="standard_analog_output_1"/>

          <state_interface name="standard_analog_input_0"/>
          <state_interface name="standard_analog_input_1"/>

          <state_interface name="analog_io_type_0"/>
          <state_interface name="analog_io_type_1"/>
          <state_interface name="analog_io_type_2"/>
          <state_interface name="analog_io_type_3"/>

          <state_interface name="tool_mode"/>
          <state_interface name="tool_output_voltage"/>
          <state_interface name="tool_output_current"/>
          <state_interface name="tool_temperature"/>

          <state_interface name="tool_analog_input_0"/>
          <state_interface name="tool_analog_input_1"/>

          <state_interface name="tool_analog_input_type_0"/>
          <state_interface name="tool_analog_input_type_1"/>

          <state_interface name="robot_mode"/>
          <state_interface name="robot_status_bit_0"/>
          <state_interface name="robot_status_bit_1"/>
          <state_interface name="robot_status_bit_2"/>
          <state_interface name="robot_status_bit_3"/>

          <state_interface name="safety_mode"/>
          <state_interface name="safety_status_bit_0"/>
          <state_interface name="safety_status_bit_1"/>
          <state_interface name="safety_status_bit_2"/>
          <state_interface name="safety_status_bit_3"/>
          <state_interface name="safety_status_bit_4"/>
          <state_interface name="safety_status_bit_5"/>
          <state_interface name="safety_status_bit_6"/>
          <state_interface name="safety_status_bit_7"/>
          <state_interface name="safety_status_bit_8"/>
          <state_interface name="safety_status_bit_9"/>
          <state_interface name="safety_status_bit_10"/>

          <state_interface name="program_running"/>
        </gpio>

        <gpio name="payload">
          <command_interface name="mass"/>
          <command_interface name="cog.x"/>
          <command_interface name="cog.y"/>
          <command_interface name="cog.z"/>
          <command_interface name="payload_async_success"/>
        </gpio>

        <gpio name="resend_robot_program">
          <command_interface name="resend_robot_program_cmd"/>
          <command_interface name="resend_robot_program_async_success"/>
        </gpio>

        <gpio name="system_interface">
          <state_interface name="initialized"/>
        </gpio> -->
  </ros2_control>
  <!-- Add URDF transmission elements (for ros_control) -->
  <!--<xacro:ur_arm_transmission prefix="${prefix}" hw_interface="${transmission_hw_interface}" />-->
  <!-- Placeholder for ros2_control transmission which don't yet exist -->
  <!-- links -  main serial chain -->
  <link name="az_base_link"/>
  <link name="az_base_link_inertia">
    <visual>
      <origin rpy="0 0 3.141592653589793" xyz="0 0 0"/>
      <geometry>
        
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 3.141592653589793" xyz="0 0 0"/>
      <geometry>
        
      </geometry>
    </collision>
    <inertial>
      <mass value="4.0"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0061063308908" ixy="0.0" ixz="0.0" iyy="0.0061063308908" iyz="0.0" izz="0.01125"/>
    </inertial>
  </link>
  <link name="az_shoulder_link">
    <visual>
      <origin rpy="0 0 3.141592653589793" xyz="0 0 0"/>
      <geometry>
        
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 3.141592653589793" xyz="0 0 0"/>
      <geometry>
        
      </geometry>
    </collision>
    <inertial>
      <mass value="7.778"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.03147431257693659" ixy="0.0" ixz="0.0" iyy="0.03147431257693659" iyz="0.0" izz="0.021875624999999996"/>
    </inertial>
  </link>
  <link name="az_upper_arm_link">
    <visual>
      <origin rpy="1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0.220941"/>
      <geometry>
        
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0.220941"/>
      <geometry>
        
      </geometry>
    </collision>
    <inertial>
      <mass value="12.93"/>
      <origin rpy="0 1.5707963267948966 0" xyz="-0.306 0.0 0.175"/>
      <inertia ixx="0.42175380379841093" ixy="0.0" ixz="0.0" iyy="0.42175380379841093" iyz="0.0" izz="0.03636562499999999"/>
    </inertial>
  </link>
  <link name="az_forearm_link">
    <visual>
      <origin rpy="1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0.049042"/>
      <geometry>
        
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0.049042"/>
      <geometry>
        
      </geometry>
    </collision>
    <inertial>
      <mass value="3.87"/>
      <origin rpy="0 1.5707963267948966 0" xyz="-0.28615 0.0 0.049042"/>
      <inertia ixx="0.11106969409710458" ixy="0.0" ixz="0.0" iyy="0.11106969409710458" iyz="0.0" izz="0.010884375"/>
    </inertial>
  </link>
  <link name="az_wrist_1_link">
    <visual>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 -0.1149"/>
      <geometry>
        
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 -0.1149"/>
      <geometry>
        
      </geometry>
    </collision>
    <inertial>
      <mass value="1.96"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.005108247956699999" ixy="0.0" ixz="0.0" iyy="0.005108247956699999" iyz="0.0" izz="0.005512499999999999"/>
    </inertial>
  </link>
  <link name="az_wrist_2_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 -0.1158"/>
      <geometry>
        
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 -0.1158"/>
      <geometry>
        
      </geometry>
    </collision>
    <inertial>
      <mass value="1.96"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0040792483683" ixy="0.0" ixz="0.0" iyy="0.0040792483683" iyz="0.0" izz="0.005512499999999999"/>
    </inertial>
  </link>
  <link name="az_wrist_3_link">
    <visual>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 -0.0922"/>
      <geometry>
        
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 -0.0922"/>
      <geometry>
        
      </geometry>
    </collision>
    <inertial>
      <mass value="0.202"/>
      <origin rpy="0 0 0" xyz="0.0 0.0 -0.01525"/>
      <inertia ixx="0.00011792166116465" ixy="0.0" ixz="0.0" iyy="0.00011792166116465" iyz="0.0" izz="0.00020452500000000002"/>
    </inertial>
  </link>
  <!-- base_joint fixes base_link to the environment -->
  <joint name="az_base_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.0 0.1 0.28"/>
    <parent link="az_base_footprint"/>
    <child link="az_base_link"/>
  </joint>
  <!-- joints - main serial chain -->
  <joint name="az_base_link-base_link_inertia" type="fixed">
    <parent link="az_base_link"/>
    <child link="az_base_link_inertia"/>
    <!-- 'base_link' is REP-103 aligned (so X+ forward), while the internal
           frames of the robot/controller have X+ pointing backwards.
           Use the joint between 'base_link' and 'base_link_inertia' (a dummy
           link/frame) to introduce the necessary rotation over Z (of pi rad).
      -->
    <origin rpy="0 0 3.141592653589793" xyz="0 0 0"/>
  </joint>
  <joint name="az_shoulder_pan_joint" type="revolute">
    <parent link="az_base_link_inertia"/>
    <child link="az_shoulder_link"/>
    <origin rpy="0 0 0" xyz="0 0 0.1273"/>
    <axis xyz="0 0 1"/>
    <limit effort="330.0" lower="-6.283185307179586" upper="6.283185307179586" velocity="1.3962634015954636"/>
    <dynamics damping="0" friction="0"/>
  </joint>
  <joint name="az_shoulder_lift_joint" type="revolute">
    <parent link="az_shoulder_link"/>
    <child link="az_upper_arm_link"/>
    <origin rpy="1.570796327 0 0" xyz="0 0 0"/>
    <axis xyz="0 0 1"/>
    <limit effort="330.0" lower="-6.283185307179586" upper="6.283185307179586" velocity="1.3962634015954636"/>
    <dynamics damping="0" friction="0"/>
  </joint>
  <joint name="az_elbow_joint" type="revolute">
    <parent link="az_upper_arm_link"/>
    <child link="az_forearm_link"/>
    <origin rpy="0 0 0" xyz="-0.612 0 0"/>
    <axis xyz="0 0 1"/>
    <limit effort="150.0" lower="-3.141592653589793" upper="3.141592653589793" velocity="1.7453292519943295"/>
    <dynamics damping="0" friction="0"/>
  </joint>
  <joint name="az_wrist_1_joint" type="revolute">
    <parent link="az_forearm_link"/>
    <child link="az_wrist_1_link"/>
    <origin rpy="0 0 0" xyz="-0.5723 0 0.163941"/>
    <axis xyz="0 0 1"/>
    <limit effort="56.0" lower="-6.283185307179586" upper="6.283185307179586" velocity="1.7453292519943295"/>
    <dynamics damping="0" friction="0"/>
  </joint>
  <joint name="az_wrist_2_joint" type="revolute">
    <parent link="az_wrist_1_link"/>
    <child link="az_wrist_2_link"/>
    <origin rpy="1.570796327 0 0" xyz="0 -0.1157 -2.373046667922381e-11"/>
    <axis xyz="0 0 1"/>
    <limit effort="56.0" lower="-6.283185307179586" upper="6.283185307179586" velocity="1.7453292519943295"/>
    <dynamics damping="0" friction="0"/>
  </joint>
  <joint name="az_wrist_3_joint" type="revolute">
    <parent link="az_wrist_2_link"/>
    <child link="az_wrist_3_link"/>
    <origin rpy="1.570796326589793 3.141592653589793 3.141592653589793" xyz="0 0.0922 -1.891053610911353e-11"/>
    <axis xyz="0 0 1"/>
    <limit effort="56.0" lower="-6.283185307179586" upper="6.283185307179586" velocity="1.7453292519943295"/>
    <dynamics damping="0" friction="0"/>
  </joint>
  <link name="az_ft_frame"/>
  <joint name="az_wrist_3_link-ft_frame" type="fixed">
    <parent link="az_wrist_3_link"/>
    <child link="az_ft_frame"/>
    <origin rpy="3.141592653589793 0 0" xyz="0 0 0"/>
  </joint>
  <!-- ROS-Industrial 'base' frame - base_link to UR 'Base' Coordinates transform -->
  <link name="az_base"/>
  <joint name="az_base_link-base_fixed_joint" type="fixed">
    <!-- Note the rotation over Z of pi radians - as base_link is REP-103
           aligned (i.e., has X+ forward, Y+ left and Z+ up), this is needed
           to correctly align 'base' with the 'Base' coordinate system of
           the UR controller.
      -->
    <origin rpy="0 0 3.141592653589793" xyz="0 0 0"/>
    <parent link="az_base_link"/>
    <child link="az_base"/>
  </joint>
  <!-- ROS-Industrial 'flange' frame - attachment point for EEF models -->
  <link name="az_flange"/>
  <joint name="az_wrist_3-flange" type="fixed">
    <parent link="az_wrist_3_link"/>
    <child link="az_flange"/>
    <origin rpy="0 -1.5707963267948966 -1.5707963267948966" xyz="0 0 0"/>
  </joint>
  <!-- ROS-Industrial 'tool0' frame - all-zeros tool frame -->
  <link name="az_tool0"/>
  <joint name="az_flange-tool0" type="fixed">
    <!-- default toolframe - X+ left, Y+ up, Z+ front -->
    <origin rpy="1.5707963267948966 0 1.5707963267948966" xyz="0 0 0"/>
    <parent link="az_flange"/>
    <child link="az_tool0"/>
  </joint>
  <link name="az_tcp"/>
  <joint name="az_tcpjoint" type="fixed">
    <parent link="az_tool0"/>
    <child link="az_tcp"/>
    <origin rpy=" 0 0 -1.570795" xyz="0.02 0.00 0.34"/>
    <axis xyz="0 0 1"/>
  </joint>

  <!-- <xacro:include filename="$(find robotiq_description)/urdf/robotiq_2f_140_macro.urdf.xacro"/> -->
  <!-- mount the fts to the robot -->
  <joint name="az_ft300s_fix" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 -0.0065"/>
    <parent link="az_tool0"/>
    <child link="az_ft300s_mounting_plate"/>
  </joint>
  <!-- Link representing the FT300s force-torque sensor -->
  <link name="az_ft300s_sensor">
    <inertial>
      <origin rpy="0 0 0" xyz="-0.006 0 0.0135"/>
      <mass value="0.410"/>
      <inertia ixx="0.000316" ixy="-1e-06" ixz="-2e-06" iyx="-1e-06" iyy="0.000611" iyz="0.0" izx="-2e-06" izy="0.0" izz="0.000671"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        
      </geometry>
      <material name="Robotiq-Black">
        <color rgba="0.2 0.2 0.2 1.0"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        
      </geometry>
    </collision>
  </link>
  <link name="az_ft300s_mounting_plate"/>
  <joint name="az_ft300s_mounting_plate" type="fixed">
    <origin rpy="0 3.141592653589793 0" xyz="0 0 0.0415"/>
    <parent link="az_ft300s_mounting_plate"/>
    <child link="az_ft300s_sensor"/>
  </joint>
  <joint name="az_measurment_joint" type="fixed">
    <origin rpy="0 3.141592653589793 -1.5707963267948966" xyz="0 0 0"/>
    <parent link="az_ft300s_sensor"/>
    <child link="az_robotiq_ft_frame_id"/>
  </joint>
  <link name="az_robotiq_ft_frame_id"/>
  <ros2_control name="az_robotiq_ft_sensor" type="sensor">
    <hardware>
      <plugin>robotiq_ft_sensor_hardware/RobotiqFTSensorHardware</plugin>
      <param name="use_fake_mode">True</param>
      <param name="max_retries">1</param>
      <param name="read_rate">10</param>
      <param name="ftdi_id"></param>
    </hardware>
    <sensor name="az_robotiq_ft_sensor">
      <state_interface name="force.x"/>
      <state_interface name="force.y"/>
      <state_interface name="force.z"/>
      <state_interface name="torque.x"/>
      <state_interface name="torque.y"/>
      <state_interface name="torque.z"/>
    </sensor>
  </ros2_control>
</robot>
